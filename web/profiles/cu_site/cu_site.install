<?php
/**
 * @file
 * Provides installation functions.
 *
 * @author Jim Berry
 */

/**
 * Implements hook_install().
 */
function cu_site_install() {
  // @todo Replace "creighton_subtheme" with the default theme for each site.
  variable_set('theme_default', 'creighton_2015');
  variable_set('admin_theme', 'creighton_admin');
  theme_enable(array('omega'));
  theme_enable(array('creighton_2015'));
  theme_disable(array('bartik'));

  // Remove block entries for bartik theme that were created during installation.
  db_delete('block')
    ->condition('theme', 'bartik')
    ->execute();

  // Run all functions that begin with 'cu_site_install_'.
  $functions = get_defined_functions();
  foreach ($functions['user'] as $function) {
    if (strpos($function, 'cu_site_install_') === 0) {
      $function();
    }
  }

  // Get rid of any message created during installation, but allow messages of
  // type 'install' to be displayed.
  $messages = drupal_get_messages('install');
  drupal_get_messages();
  if (isset($messages['install'])) {
    foreach ($messages['install'] as $message) {
      drupal_set_message($message);
    }
  }

  // include autodetect file and run autodetect script
  module_load_include('inc', 'environment_variables', 'environment_variables.autodetect');
  _environment_variables_autodetect_environment();
  // include initializecontrol file and run initializecontrol script to control all available settings for autodetected environment
  module_load_include('inc', 'environment_variables', 'environment_variables.initializecontrol');
  _environment_variables_initializecontrol();
  // include applysettings file and run applysettings script
  module_load_include('inc', 'environment_variables', 'environment_variables.applysettings');
  _environment_variables_applysettings();

  // turn off display of errors
  variable_set('error_level', '0');
}

/**
 * Setup based on environment.
 */
function cu_site_install_environment() {
  if (cu_site_environment_get() != 'development') {
//     module_enable(array('googleanalytics', 'mollom'));
  }
  else {
    module_enable(array('views_ui', 'field_ui'));
    variable_set('views_ui_show_advanced_help_warning', FALSE);
  }
}



/**
 * Adds custom date formats (in advance of features support).
 */
function cu_site_install_date_formats() {
  $formats = array('M Y', 'd', 'g:ia');
  foreach ($formats as $format) {
    $id = db_insert('date_formats')
      ->fields(array(
        'format' => $format,
        'type' => 'custom',
        'locked' => 0,
      ))
      ->execute();
  }
}

/**
 * Add blocks to regions
*/

function cu_site_install_set_blocks() {
	$default_theme = variable_get('theme_default');
	$values = array(
		array(
			'module' => 'menu_block',
			'delta' => 'header_transaction_menu',
			'theme' => $default_theme,
			'status' => 1,
			'weight' => 0,
			'region' => 'header',
			'pages' => '',
			'title' => '<none>',
			'cache' => -1,
		),
		array(
			'module' => 'menu_block',
			'delta' => 'header_main_menu',
			'theme' => $default_theme,
			'status' => 1,
			'weight' => 1,
			'region' => 'header',
			'pages' => '',
			'title' => '<none>',
			'cache' => -1,
		),
		array(
			'module' => 'menu_block',
			'delta' => 'header_utility_menu',
			'theme' => $default_theme,
			'status' => 1,
			'weight' => -1,
			'region' => 'secondary_header',
			'pages' => '',
			'title' => '<none>',
			'cache' => -1,
		),
		array(
			'module' => 'cu_quick_search_blocks',
			'delta' => 'header_search_block',
			'theme' => $default_theme,
			'status' => 1,
			'weight' => 0,
			'region' => 'secondary_header',
			'pages' => '',
			'title' => '<none>',
			'cache' => -1,
		),
		array(
			'module' => 'views',
			'delta' => 'header_background_image-block',
			'theme' => $default_theme,
			'status' => 1,
			'weight' => 0,
			'region' => 'header_image',
			'pages' => '',
			'title' => '<none>',
			'cache' => -1,
		),
		array(
			'module' => 'menu_block',
			'delta' => 'sidebar_secondary_menu',
			'theme' => $default_theme,
			'status' => 1,
			'weight' => -15,
			'region' => 'sidebar_first',
			'pages' => '',
			'title' => '<none>',
			'cache' => -1,
		),
		array(
			'module' => 'views',
			'delta' => 'secondary_content_field-block_1',
			'theme' => $default_theme,
			'status' => 1,
			'weight' => 0,
			'region' => 'sidebar_second',
			'pages' => '',
			'title' => '<none>',
			'cache' => -1,
		),
		array(
			'module' => 'menu_block',
			'delta' => 'footer_transaction_menu',
			'theme' => $default_theme,
			'status' => 1,
			'weight' => -5,
			'region' => 'footer',
			'pages' => '',
			'title' => '<none>',
			'cache' => -1,
		),
		array(
			'module' => 'menu_block',
			'delta' => 'footer_main_menu',
			'theme' => $default_theme,
			'status' => 1,
			'weight' => 5,
			'region' => 'footer',
			'pages' => '',
			'title' => '<none>',
			'cache' => -1,
		),
		array(
			'module' => 'cu_quick_search_blocks',
			'delta' => 'footer',
			'theme' => $default_theme,
			'status' => 1,
			'weight' => 0,
			'region' => 'footer',
			'pages' => '',
			'title' => '<none>',
			'cache' => -1,
		),
	);

	$query = db_insert('block')->fields(array('module', 'delta', 'theme', 'status', 'weight', 'region', 'pages', 'title', 'cache'));

	foreach ($values as $record) {
		$query->values($record);
	}
	$query->execute();
}
 
 
/**
 * Inserts feed source causing initial import of feed.
 *** REMOVED AFTER TURNING OFF FEED IMPORT
 function cu_site_install_feed_setup() {
  require_once drupal_get_path('module', 'feeds') . '/feeds.pages.inc';
  $form['#importer_id'] = 'creighton_events';
  $form_state['values']['feeds']['FeedsHTTPFetcher']['source'] = 'http://calendar.creighton.edu/rss.xml';
  feeds_import_form_submit($form, $form_state);
}
 */
